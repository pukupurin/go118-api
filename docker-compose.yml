version: "3.9"
services:
  go-ent-api:
    depends_on:
      - go-ent-db
    ports:
      - 8080:80
    build:
      context: .
      target: debug
    restart: always
    container_name: "go-ent-api"
    networks:
      - go-entNet
    env_file: .env
    volumes:
      - .:/root/api
    tty: true

  go-ent-db:
    image: postgres:14-alpine
    restart: unless-stopped
    container_name: "go-ent-db"
    ports:
      - 15432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      TZ: Asia/Tokyo
      LANG: ja_JP.utf8
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - go-entNet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      timeout: 20s
      interval: 3s
      retries: 10

  go-ent-db-migration:
    depends_on:
      go-ent-db:
        condition: service_healthy
    build:
      context: db-migration
    container_name: go-ent-db-migration
    networks:
      - go-entNet
    environment:
      DB_HOST: go-ent-db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./db-migration:/root/migration
    command: scripts/migrate_local.sh

  adminer:
    depends_on:
      - go-ent-db
    image: adminer
    container_name: "go-ent-adminer"
    restart: always
    ports:
      - 19999:8080
    networks:
      - go-entNet

networks:
  go-entNet:

volumes:
  db-data:
